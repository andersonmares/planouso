<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'form.registry' shared service.

return $this->services['form.registry'] = new \Symfony\Component\Form\FormRegistry(array(0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\ServiceLocator(array('Admin\\AdminBundle\\Form\\AtividadePlanoUsoType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\AtividadePlanoUsoType']) ? $this->services['Admin\AdminBundle\Form\AtividadePlanoUsoType'] : $this->services['Admin\AdminBundle\Form\AtividadePlanoUsoType'] = new \Admin\AdminBundle\Form\AtividadePlanoUsoType()) && false ?: '_'};
}, 'Admin\\AdminBundle\\Form\\AtividadeType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\AtividadeType']) ? $this->services['Admin\AdminBundle\Form\AtividadeType'] : $this->services['Admin\AdminBundle\Form\AtividadeType'] = new \Admin\AdminBundle\Form\AtividadeType()) && false ?: '_'};
}, 'Admin\\AdminBundle\\Form\\AuxUsuarioPessoaFisicaType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\AuxUsuarioPessoaFisicaType']) ? $this->services['Admin\AdminBundle\Form\AuxUsuarioPessoaFisicaType'] : $this->services['Admin\AdminBundle\Form\AuxUsuarioPessoaFisicaType'] = new \Admin\AdminBundle\Form\AuxUsuarioPessoaFisicaType()) && false ?: '_'};
}, 'Admin\\AdminBundle\\Form\\DepartamentoType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\DepartamentoType']) ? $this->services['Admin\AdminBundle\Form\DepartamentoType'] : $this->services['Admin\AdminBundle\Form\DepartamentoType'] = new \Admin\AdminBundle\Form\DepartamentoType()) && false ?: '_'};
}, 'Admin\\AdminBundle\\Form\\PlanilhaNotaEmpenhoType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\PlanilhaNotaEmpenhoType']) ? $this->services['Admin\AdminBundle\Form\PlanilhaNotaEmpenhoType'] : $this->services['Admin\AdminBundle\Form\PlanilhaNotaEmpenhoType'] = new \Admin\AdminBundle\Form\PlanilhaNotaEmpenhoType()) && false ?: '_'};
}, 'Admin\\AdminBundle\\Form\\PlanilhaOrcamentariaType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\PlanilhaOrcamentariaType']) ? $this->services['Admin\AdminBundle\Form\PlanilhaOrcamentariaType'] : $this->services['Admin\AdminBundle\Form\PlanilhaOrcamentariaType'] = new \Admin\AdminBundle\Form\PlanilhaOrcamentariaType()) && false ?: '_'};
}, 'Admin\\AdminBundle\\Form\\RedeProgramaType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\RedeProgramaType']) ? $this->services['Admin\AdminBundle\Form\RedeProgramaType'] : $this->services['Admin\AdminBundle\Form\RedeProgramaType'] = new \Admin\AdminBundle\Form\RedeProgramaType()) && false ?: '_'};
}, 'Admin\\AdminBundle\\Form\\RlAcaoOrcamentariaDepartamentoType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\RlAcaoOrcamentariaDepartamentoType']) ? $this->services['Admin\AdminBundle\Form\RlAcaoOrcamentariaDepartamentoType'] : $this->services['Admin\AdminBundle\Form\RlAcaoOrcamentariaDepartamentoType'] = new \Admin\AdminBundle\Form\RlAcaoOrcamentariaDepartamentoType()) && false ?: '_'};
}, 'Admin\\AdminBundle\\Form\\TipoAtividadeType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\TipoAtividadeType']) ? $this->services['Admin\AdminBundle\Form\TipoAtividadeType'] : $this->services['Admin\AdminBundle\Form\TipoAtividadeType'] = new \Admin\AdminBundle\Form\TipoAtividadeType()) && false ?: '_'};
}, 'Admin\\AdminBundle\\Form\\TipoComponenteType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\TipoComponenteType']) ? $this->services['Admin\AdminBundle\Form\TipoComponenteType'] : $this->services['Admin\AdminBundle\Form\TipoComponenteType'] = new \Admin\AdminBundle\Form\TipoComponenteType()) && false ?: '_'};
}, 'Admin\\AdminBundle\\Form\\TipoDespesaType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\TipoDespesaType']) ? $this->services['Admin\AdminBundle\Form\TipoDespesaType'] : $this->services['Admin\AdminBundle\Form\TipoDespesaType'] = new \Admin\AdminBundle\Form\TipoDespesaType()) && false ?: '_'};
}, 'Admin\\AdminBundle\\Form\\TipoInstrumentoType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\TipoInstrumentoType']) ? $this->services['Admin\AdminBundle\Form\TipoInstrumentoType'] : $this->services['Admin\AdminBundle\Form\TipoInstrumentoType'] = new \Admin\AdminBundle\Form\TipoInstrumentoType()) && false ?: '_'};
}, 'Admin\\AdminBundle\\Form\\UsuarioPessoaFisicaType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\UsuarioPessoaFisicaType']) ? $this->services['Admin\AdminBundle\Form\UsuarioPessoaFisicaType'] : $this->services['Admin\AdminBundle\Form\UsuarioPessoaFisicaType'] = new \Admin\AdminBundle\Form\UsuarioPessoaFisicaType()) && false ?: '_'};
}, 'Admin\\AdminBundle\\Form\\VinculoPlanejamentoType' => function () {
    return ${($_ = isset($this->services['Admin\AdminBundle\Form\VinculoPlanejamentoType']) ? $this->services['Admin\AdminBundle\Form\VinculoPlanejamentoType'] : $this->services['Admin\AdminBundle\Form\VinculoPlanejamentoType'] = new \Admin\AdminBundle\Form\VinculoPlanejamentoType()) && false ?: '_'};
}, 'AppBundle\\Form\\ChangePasswordType' => function () {
    return ${($_ = isset($this->services['AppBundle\Form\ChangePasswordType']) ? $this->services['AppBundle\Form\ChangePasswordType'] : $this->services['AppBundle\Form\ChangePasswordType'] = new \AppBundle\Form\ChangePasswordType()) && false ?: '_'};
}, 'AppBundle\\Form\\ForgotPasswordType' => function () {
    return ${($_ = isset($this->services['AppBundle\Form\ForgotPasswordType']) ? $this->services['AppBundle\Form\ForgotPasswordType'] : $this->services['AppBundle\Form\ForgotPasswordType'] = new \AppBundle\Form\ForgotPasswordType()) && false ?: '_'};
}, 'AppBundle\\Form\\RecoverPasswordType' => function () {
    return ${($_ = isset($this->services['AppBundle\Form\RecoverPasswordType']) ? $this->services['AppBundle\Form\RecoverPasswordType'] : $this->services['AppBundle\Form\RecoverPasswordType'] = new \AppBundle\Form\RecoverPasswordType()) && false ?: '_'};
}, 'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => function () {
    return ${($_ = isset($this->services['form.type.entity']) ? $this->services['form.type.entity'] : $this->load(__DIR__.'/getForm_Type_EntityService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => function () {
    return ${($_ = isset($this->services['form.type.choice']) ? $this->services['form.type.choice'] : $this->load(__DIR__.'/getForm_Type_ChoiceService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => function () {
    return ${($_ = isset($this->services['form.type.form']) ? $this->services['form.type.form'] : $this->load(__DIR__.'/getForm_Type_FormService.php')) && false ?: '_'};
})), array('Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.form.http_foundation']) ? $this->services['form.type_extension.form.http_foundation'] : $this->load(__DIR__.'/getForm_TypeExtension_Form_HttpFoundationService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['form.type_extension.form.validator']) ? $this->services['form.type_extension.form.validator'] : $this->load(__DIR__.'/getForm_TypeExtension_Form_ValidatorService.php')) && false ?: '_'};
    yield 2 => ${($_ = isset($this->services['form.type_extension.upload.validator']) ? $this->services['form.type_extension.upload.validator'] : $this->load(__DIR__.'/getForm_TypeExtension_Upload_ValidatorService.php')) && false ?: '_'};
    yield 3 => ${($_ = isset($this->services['form.type_extension.csrf']) ? $this->services['form.type_extension.csrf'] : $this->load(__DIR__.'/getForm_TypeExtension_CsrfService.php')) && false ?: '_'};
    yield 4 => ${($_ = isset($this->services['form.type_extension.form.data_collector']) ? $this->services['form.type_extension.form.data_collector'] : $this->load(__DIR__.'/getForm_TypeExtension_Form_DataCollectorService.php')) && false ?: '_'};
}, 5), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.repeated.validator']) ? $this->services['form.type_extension.repeated.validator'] : $this->services['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension()) && false ?: '_'};
}, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.submit.validator']) ? $this->services['form.type_extension.submit.validator'] : $this->services['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension()) && false ?: '_'};
}, 1)), new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_guesser.validator']) ? $this->services['form.type_guesser.validator'] : $this->load(__DIR__.'/getForm_TypeGuesser_ValidatorService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['form.type_guesser.doctrine']) ? $this->services['form.type_guesser.doctrine'] : $this->load(__DIR__.'/getForm_TypeGuesser_DoctrineService.php')) && false ?: '_'};
}, 2), NULL)), ${($_ = isset($this->services['form.resolved_type_factory']) ? $this->services['form.resolved_type_factory'] : $this->load(__DIR__.'/getForm_ResolvedTypeFactoryService.php')) && false ?: '_'});
